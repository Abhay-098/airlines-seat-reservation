service: serverless-airline-reservations

provider:
  name: aws
  runtime: python3.9
  stage: dev
  region: us-east-1
  profile: default  # Replace with your AWS CLI profile name
  # Configure IAM permissions for the Lambda function
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
          Resource: "arn:aws:dynamodb:us-east-1:${aws:accountId}:table/seat-reservations-dev"
  environment:
    DYNAMODB_TABLE: seat-reservations-dev

functions:
  api:
    handler: handler.handle_request  # Corresponds to handler.py and the handle_request function
    events:
      - http:
          path: /seats
          method: get
      - http:
          path: /reserve
          method: post
      - http:
          path: /cancel
          method: post

resources:
  Resources:
    SeatsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: seat-reservations-dev
        AttributeDefinitions:
          - AttributeName: seatId
            AttributeType: S
        KeySchema:
          - AttributeName: seatId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
